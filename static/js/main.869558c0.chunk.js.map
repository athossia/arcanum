{"version":3,"sources":["images/monster_icon.png","images/spellbook_icon.png","views/bestiary.js","views/bestiary/monster.js","views/spellbook/spell.js","views/spellbook.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","monsterTypes","challengeRatings","monster","spell","Bestiary","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleNameFilterChange","bind","assertThisInitialized","localStorageTypeFilter","localStorage","getItem","localStorageCrFilter","localStorageNameFilter","state","typeFilter","JSON","parse","crFilter","nameFilter","buildInitialData","Array","from","Set","monsters","map","mon","type","sort","challenge_rating","a","b","filter","indexOf","push","index","splice","setState","setItem","stringify","cr","console","log","data","name","target","value","toLowerCase","require","inspect","length","_this2","react_default","createElement","className","onClick","resetTypeFilter","activeClass","isTypeFilterActive","toggleTypeFilter","resetCrFilter","isCrFilterActive","toggleChallengeFilter","onChange","bestiary_MonsterEntry","id","Component","MonsterEntry","react_router_dom","to","savingThrowVariables","savingThrowLabels","strength_save","dexterity_save","constitution_save","wisdom_save","intelligence_save","charisma_save","Monster","match","params","monsterId","stat","Math","floor","savingThrows","v","item","undefined","concat","join","size","subtype","alignment","monster_MonsterStat","class","label","armor_class","hit_points","hit_dice","speed","strength","calculateStatBonus","dexterity","constitution","wisdom","intelligence","charisma","damage_vulnerabilities","damage_resistances","damage_immunities","condition_immunities","senses","languages","special_abilities","ability","monster_MonsterAbility","desc","actions","action","legendary_actions","MonsterStat","MonsterAbility","Spellbook","spells","school","casting_time","level","spellbook_SpellEntry","SpellEntry","Spell","spellId","number","ordinalMap","spellLevelFormatter","range","components","duration","entry","App","react_router","exact","path","component","Home","render","bestiary","bestiary_monster","assign","spellbook","spellbook_spell","src","Boolean","window","location","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.869558c0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/monster_icon.a7e26744.png\";","module.exports = __webpack_public_path__ + \"static/media/spellbook_icon.885e4ad6.png\";","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Link } from 'react-router-dom';\n\nvar monsterTypes, challengeRatings;\n\nclass Bestiary extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleNameFilterChange = this.handleNameFilterChange.bind(this);\n\n    // Initialize filters as empty.  Empty filters count as no filter,\n    // so all results are shown.  When filters are added, they are pushed\n    // into the array, and then only items matching what is in the arrays\n    // are shown.\n\n    let localStorageTypeFilter = localStorage.getItem('bestiary-type-filter');\n    let localStorageCrFilter = localStorage.getItem('bestiary-cr-filter');\n    let localStorageNameFilter = localStorage.getItem('bestiary-name-filter');\n\n    this.state = {\n      typeFilter: localStorageTypeFilter ? JSON.parse(localStorageTypeFilter) : [],\n      crFilter: localStorageCrFilter ? JSON.parse(localStorageCrFilter) : [],\n      nameFilter: localStorageNameFilter ? localStorageNameFilter : ''\n    }\n  }\n  componentWillMount() {\n    this.buildInitialData();\n  }\n\n  buildInitialData() {\n    monsterTypes = Array.from(new Set(this.props.monsters.map(mon => mon.type))).sort();\n    challengeRatings = Array.from(new Set(this.props.monsters.map(mon => mon.challenge_rating))).sort(function(a,b){return a-b});\n  }\n\n  toggleTypeFilter(type) {\n    let filter = this.state.typeFilter;\n    if(filter.indexOf(type) === -1) {\n      filter.push(type);\n    } else {\n      let index = filter.indexOf(type);\n      filter.splice(index, 1);\n    }\n    this.setState({\n      typeFilter: filter\n    });\n\n    localStorage.setItem('bestiary-type-filter', JSON.stringify(filter));\n  }\n\n  resetTypeFilter() {\n    this.setState({\n      typeFilter: []\n    });\n\n    localStorage.setItem('bestiary-type-filter', JSON.stringify([]));\n  }\n\n  toggleChallengeFilter(cr) {\n    // cr = cr.toString();\n\n    let filter = this.state.crFilter;\n    if(filter.indexOf(cr) === -1) {\n      filter.push(cr);\n    } else {\n      let index = filter.indexOf(cr);\n      filter.splice(index, 1);\n    }\n\n    console.log(\"Toggling \" + cr);\n    this.setState({\n      crFilter: filter\n    });\n\n    localStorage.setItem('bestiary-cr-filter', JSON.stringify(filter));\n  }\n\n  resetCrFilter() {\n    this.setState({\n      crFilter: []\n    });\n\n    localStorage.setItem('bestiary-cr-filter', JSON.stringify([]));\n  }\n\n  handleNameFilterChange(data) {\n    let name = data.target.value.toLowerCase();\n\n    this.setState({\n      nameFilter: name\n    });\n\n    console.log(require('util').inspect(name))\n\n    localStorage.setItem('bestiary-name-filter', name);\n  }\n\n  isTypeFilterActive(type) {\n    if(this.state && this.state.typeFilter && this.state.typeFilter.length > 0) {\n      if(this.state.typeFilter.indexOf(type) > -1) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  isCrFilterActive(cr) {\n    if(this.state && this.state.crFilter && this.state.crFilter.length > 0) {\n      if(this.state.crFilter.indexOf(cr) > -1) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  isNameFilterActive(name) {\n    if(this.state && this.state.nameFilter && this.state.nameFilter.length > 0) {\n      return true;\n    }\n    return false;\n  }\n\n  render() {\n    return (<div>\n      <div className=\"bestiary-header\">D&D 5e Bestiary</div>\n      <div className=\"monster-types-container\">\n        <a onClick={() => this.resetTypeFilter()} className=\"filter-button\"><div className={\"monster-type\" + (this.state.typeFilter.length === 0 ? \" active-filter\" : \" inactive-filter\")}>all</div></a>\n        {monsterTypes.map(type => {\n          let activeClass = \" inactive-filter\";\n          if(this.isTypeFilterActive(type)) {\n            activeClass = \" active-filter\";\n          }\n          return <a onClick={() => this.toggleTypeFilter(type)} className=\"filter-button\"><div className={\"monster-type\" + activeClass}>{type}</div></a>\n        })}\n      </div>\n      <div className=\"challenge-ratings-container\">\n      <a onClick={() => this.resetCrFilter()} className=\"filter-button\"><div className={\"challenge-rating\" + (this.state.crFilter.length === 0 ? \" active-filter\" : \" inactive-filter\")}>all</div></a>\n        {challengeRatings.map(cr => {\n          let activeClass = \" inactive-filter\";\n          if(this.isCrFilterActive(cr)) {\n            activeClass = \" active-filter\";\n          }\n          return <a onClick={() => this.toggleChallengeFilter(cr)} className=\"filter-button\"><div className={\"challenge-rating\" + activeClass}>{cr}</div></a>\n        })}\n      </div>\n      <div className=\"\">\n        <input type=\"text\" value={this.state.nameFilter} onChange={this.handleNameFilterChange} />\n      </div>\n      <div className=\"monsters-container\">\n        {this.props.monsters.map(monster => {\n          if(this.state && this.state.typeFilter && this.state.typeFilter.length > 0) {\n            if(this.state.typeFilter.indexOf(monster.type) == -1) {\n              return null;\n            }\n          }\n          if(this.state && this.state.crFilter && this.state.crFilter.length > 0) {\n            if(this.state.crFilter.indexOf(monster.challenge_rating) == -1) {\n              return null;\n            }\n          }\n          if(this.state && this.state.nameFilter && this.state.nameFilter.length > 0) {\n            if(monster.name.toLowerCase().indexOf(this.state.nameFilter) == -1) {\n              return null;\n            }\n          }\n          return <MonsterEntry name={monster.name} id={monster.index} type={monster.type} cr={monster.challenge_rating} />\n        })}\n      </div>\n    </div>);\n  }\n}\n\nclass MonsterEntry extends Component {\n  render() {\n    return (\n      <div className=\"monster\">\n        <Link to={\"/bestiary/\"+this.props.id}>\n          {this.props.name} [{this.props.type}, CR {this.props.cr}]\n        </Link>\n      </div>\n    )\n  }\n}\n\nexport default Bestiary;","import React, { Component } from 'react';\n\nvar monster;\n\nconst savingThrowVariables = [\n  \"strength_save\",\n  \"dexterity_save\",\n  \"constitution_save\",\n  \"wisdom_save\",\n  \"intelligence_save\",\n  \"charisma_save\"\n];\n\nconst savingThrowLabels = {\n  strength_save: \"Str\",\n  dexterity_save: \"Dex\",\n  constitution_save: \"Con\",\n  wisdom_save: \"Wis\",\n  intelligence_save: \"Int\",\n  charisma_save: \"Cha\"\n}\n\nclass Monster extends Component {\n  componentWillMount() {\n    monster = this.props.monsters.filter(monster => monster.index == this.props.match.params.monsterId)[0];\n  }\n\n  calculateStatBonus(stat) {\n    return Math.floor(stat / 5);\n  }\n\n  render() {\n    let savingThrows = savingThrowVariables\n      .map(v => [v, monster[v]])\n      .filter(item => item[1] !== undefined)\n      .map(item => `${savingThrowLabels[item[0]]} +${item[1]}`).join(', ');\n    \n    return (<div className=\"monster-container\">\n      <div className=\"data-section monster\">\n        <div className=\"monster-name\">{monster.name}</div>\n        <div className=\"monster-details\">{monster.size} {monster.type}{monster.subtype && ` (${monster.subtype})`}, {monster.alignment}</div>\n      </div>\n      <div className=\"data-section-divider\" />\n      <div className=\"monster-data\">\n        <div className=\"data-section monster\">\n          <MonsterStat class=\"monster-armor-class\" label=\"Armor Class\" value={monster.armor_class} />\n          <MonsterStat class=\"monster-hit-points\" label=\"Hit Points\" value={`${monster.hit_points} (${monster.hit_dice})`} />\n          <MonsterStat class=\"monster-speed\" label=\"Speed\" value={monster.speed} />\n        </div>\n        <div className=\"data-section-divider\" />\n        <div className=\"data-section monster\">\n          <div className=\"monster-stat-block\">\n            <div className=\"monster-stat\"><div className=\"monster-stat-header\">STR</div><div className=\"monster-stat-value\">{monster.strength} (+{this.calculateStatBonus(monster.strength)})</div></div>\n            <div className=\"monster-stat\"><div className=\"monster-stat-header\">DEX</div><div className=\"monster-stat-value\">{monster.dexterity} (+{this.calculateStatBonus(monster.dexterity)})</div></div>\n            <div className=\"monster-stat\"><div className=\"monster-stat-header\">CON</div><div className=\"monster-stat-value\">{monster.constitution} (+{this.calculateStatBonus(monster.constitution)})</div></div>\n            <div className=\"monster-stat\"><div className=\"monster-stat-header\">WIS</div><div className=\"monster-stat-value\">{monster.wisdom} (+{this.calculateStatBonus(monster.wisdom)})</div></div>\n            <div className=\"monster-stat\"><div className=\"monster-stat-header\">INT</div><div className=\"monster-stat-value\">{monster.intelligence} (+{this.calculateStatBonus(monster.intelligence)})</div></div>\n            <div className=\"monster-stat\"><div className=\"monster-stat-header\">CHA</div><div className=\"monster-stat-value\">{monster.charisma} (+{this.calculateStatBonus(monster.charisma)})</div></div>\n          </div>\n        </div>\n        <div className=\"data-section-divider\" />\n        <div className=\"data-section monster\">\n          <MonsterStat class=\"monster-saving-throws\" label=\"Saving Throws\" value={savingThrows} />\n          <MonsterStat class=\"monster-damage-vulnerabilities\" label=\"Damage Vulnerabilities\" value={monster.damage_vulnerabilities} />\n          <MonsterStat class=\"monster-damage-resistances\" label=\"Damage Resistances\" value={monster.damage_resistances} />        \n          <MonsterStat class=\"monster-damage-immunities\" label=\"Damage Immunities\" value={monster.damage_immunities} />        \n          <MonsterStat class=\"monster-condition-immunities\" label=\"Condition Immunities\" value={monster.condition_immunities} />        \n          <MonsterStat class=\"monster-senses\" label=\"Senses\" value={monster.senses} />\n          <MonsterStat class=\"monster-languages\" label=\"Languages\" value={monster.languages} />\n          <MonsterStat class=\"monster-challenge-rating\" label=\"Challenge\" value={monster.challenge_rating} />\n        </div>\n        <div className=\"data-section-divider\" />\n        {monster.special_abilities && <div className=\"monster-special-abilities\">\n          {monster.special_abilities.map(ability => {\n            return <MonsterAbility name={ability.name} desc={ability.desc} />\n          })}\n        </div>}\n        {monster.actions && <div className=\"monster-actions\">\n          <div className=\"monster-actions-title\">Actions</div>\n          {monster.actions.map(action => {\n             return <MonsterAbility name={action.name} desc={action.desc} />\n          })}\n        </div>}\n        {monster.legendary_actions && <div className=\"monster-legendary-actions\">\n          <div className=\"monster-legendary-actions-title\">Legendary Actions</div>\n          <div className=\"monster-legendary-actions-description\">The {monster.name.toLowerCase()} can take 3 legendary actions, choosing from the options below. Only one legendary action option can be used at a time, and only at the end of another creature’s turn. The {monster.name.toLowerCase()} regains spent legendary actions at the start of its turn.</div>\n          {monster.legendary_actions.map(action => {\n             return <MonsterAbility name={action.name} desc={action.desc} />\n          })}\n        </div>}\n      </div>\n    </div>)\n  }\n}\n\nclass MonsterStat extends Component {\n  render() {\n    if(!this.props.label || !this.props.class) {\n      console.log(\"The MonsterStat component requires both a label and class!\");\n    }\n    \n    if(!this.props.value) {\n      return null;\n    }\n\n    return (\n      <div className={this.props.class}>\n        <div className=\"inline-header\">{this.props.label}</div> {this.props.value}\n      </div>\n    );\n  }\n}\n\nclass MonsterAbility extends Component {\n  render() {\n    if(!this.props.name || !this.props.desc) {\n      console.log(\"The MonsterStat component requires both a label and value!\");\n    }\n\n    return (\n      <div className=\"monster-special-ability\">\n        <div className=\"monster-special-ability-title\">{this.props.name}.</div> {this.props.desc}\n      </div>\n    );\n  }\n}\n\nexport default Monster;","import React, { Component } from 'react';\n\nvar spell;\n\n\nclass Spell extends Component {\n  componentWillMount() {\n    spell = this.props.spells.filter(spell => spell.index == this.props.match.params.spellId)[0];\n    console.log(this.props.match.params);\n  }\n\n  ordinalMap(number) {\n    if(number == 1) return 'st';\n    if(number == 2) return 'nd';\n    if(number == 3) return 'rd';\n    return 'th';\n  }\n\n  spellLevelFormatter(level, school) {\n    if(level == 0) {\n      return `${school} cantrip`;\n    }\n\n    return `${level}${this.ordinalMap(level)}-level ${school.toLowerCase()}`;\n  }\n\n  render() {\n    return (<div className=\"spell-container\">\n      <div className=\"spell-name\">{spell.name}</div>\n      <div className=\"spell-details\">{this.spellLevelFormatter(spell.level, spell.school.name)}</div>\n      <div className=\"spell-casting-time\"><div className=\"inline-header\">Casting Time:</div> {spell.casting_time}</div>\n      <div className=\"spell-range\"><div className=\"inline-header\">Range:</div> {spell.range}</div>\n      <div className=\"spell-components\"><div className=\"inline-header\">Components:</div> {spell.components}</div>\n      <div className=\"spell-duration\"><div className=\"inline-header\">Duration:</div> {spell.duration}</div>\n      <div className=\"spell-description\">\n        {spell.desc.map(entry => {\n          return <div className=\"spell-description-line\">{entry}</div>\n        })}\n      </div>\n    </div>)\n  }\n}\n\nclass SpellStat extends Component {\n  render() {\n    return (\n      <div className={this.props.class}>\n        <div className=\"inline-header\">{this.props.label}</div> {this.props.value}\n      </div>\n    );\n  }\n}\n\nclass MonsterAbility extends Component {\n  render() {\n    if(!this.props.name || !this.props.desc) {\n      console.log(\"The MonsterStat component requires both a label and value!\");\n    }\n\n    return (\n      <div className=\"monster-special-ability\">\n        <div className=\"monster-special-ability-title\">{this.props.name}.</div> {this.props.desc}\n      </div>\n    );\n  }\n}\n\nexport default Spell;","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Link } from 'react-router-dom';\n\nvar spellClasses, spellSchools, spellCastingTimes, spellLevels;\n\nclass Spellbook extends Component {\n  componentWillMount() {\n    this.buildInitialData();\n  }\n\n  buildInitialData() {\n    // spellClasses = Array.from(new Set(this.props.spells.map(spell => spell.classes.map(s => s.name)))).sort();\n    spellSchools = Array.from(new Set(this.props.spells.map(spell => spell.school.name))).sort();\n    spellCastingTimes = Array.from(new Set(this.props.spells.map(spell => spell.casting_time))).sort();\n    spellLevels = Array.from(new Set(this.props.spells.map(spell => spell.level))).sort(function(a,b){return a-b});\n  }\n\n  setTypeFilter(type) {\n    this.setState({\n      typeFilter: type\n    });\n  }\n\n  setChallengeFilter(cr) {\n    this.setState({\n      crFilter: cr\n    });\n  }\n\n  render() {\n    return (<div>\n      <div className=\"spellbook-header\">D&D 5e Spellbook</div>\n      <div className=\"spells-container\">\n        {this.props.spells.map(spell => {\n          // if(this.state && this.state.typeFilter) {\n          //   if(monster.type !== this.state.typeFilter) {\n          //     return null;\n          //   }\n          // }\n          // if(this.state && this.state.crFilter) {\n          //   if(monster.challenge_rating !== this.state.crFilter) {\n          //     return null;\n          //   }\n          // }\n          return <SpellEntry name={spell.name} id={spell.index} />\n        })}\n      </div>\n    </div>);\n  }\n}\n\nclass SpellEntry extends Component {\n  render() {\n    return (\n      <div className=\"spell\">\n        <Link to={\"/spellbook/\"+this.props.id}>\n          {this.props.name}\n        </Link>\n      </div>\n    )\n  }\n}\n\nexport default Spellbook;","import React, { Component } from 'react';\nimport './App.css';\nimport abilityScores from './data/5e-SRD-Ability-Scores';\nimport classes from './data/5e-SRD-Classes';\nimport conditions from './data/5e-SRD-Conditions';\nimport damageTypes from './data/5e-SRD-Damage-Types';\nimport equipmentCategories from './data/5e-SRD-Equipment-Categories';\nimport equipment from './data/5e-SRD-Equipment';\nimport classFeatures from './data/5e-SRD-Features';\nimport languages from './data/5e-SRD-Languages';\nimport levels from './data/5e-SRD-Levels';\nimport magicSchools from './data/5e-SRD-Magic-Schools';\nimport monsters from './data/5e-SRD-Monsters';\nimport proficiencies from './data/5e-SRD-Proficiencies';\nimport races from './data/5e-SRD-Races';\nimport skills from './data/5e-SRD-Skills';\nimport spellcasting from './data/5e-SRD-Spellcasting';\nimport spells from './data/5e-SRD-Spells';\nimport startingEquipment from './data/5e-SRD-StartingEquipment';\nimport subclasses from './data/5e-SRD-Subclasses';\nimport subraces from './data/5e-SRD-Subraces';\nimport traits from './data/5e-SRD-Traits';\nimport weaponProperties from './data/5e-SRD-Weapon-Properties';\nimport Bestiary from './views/bestiary';\nimport Monster from './views/bestiary/monster';\nimport Spellbook from './views/spellbook';\nimport Spell from './views/spellbook/spell';\nimport { HashRouter, Route, Link } from 'react-router-dom';\n\nvar monsterTypes, challengeRatings;\n\nclass App extends Component {\n  render() {\n    return (<div className=\"main-container\">\n        <HashRouter>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/bestiary\" render={() => <Bestiary monsters={monsters} />} />\n          <Route exact path=\"/bestiary/:monsterId\" render={(props) => <Monster {...props} monsters={monsters} />} />\n          <Route exact path=\"/spellbook\" render={() => <Spellbook spells={spells} />} />\n          <Route exact path=\"/spellbook/:spellId\" render={(props) => <Spell {...props} spells={spells} />} />\n        </HashRouter>\n      </div>\n    );\n  }\n}\n\nclass Home extends Component {\n  render() {\n    return (<div className=\"route-container\">\n      <Link className=\"route-button\" to=\"/bestiary\">\n        <div className=\"route-label\">\n          <img src={require(\"./images/monster_icon.png\")}/>\n          Bestiary\n        </div>\n      </Link>\n      <Link className=\"route-button\" to=\"/spellbook\">\n        <div className=\"route-label\">\n          <img src={require(\"./images/spellbook_icon.png\")}/>\n          Spellbook\n        </div>\n      </Link>\n    </div>);\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}