{"version":3,"sources":["images/monster_icon.png","images/spellbook_icon.png","views/bestiary.js","views/bestiary/monster.js","views/spellbook/spell.js","views/spellbook.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","monsterTypes","challengeRatings","monster","spell","Bestiary","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","typeFilter","crFilter","buildInitialData","Array","from","Set","monsters","map","mon","type","sort","challenge_rating","a","b","filter","indexOf","push","pop","setState","cr","length","_this2","react_default","createElement","className","onClick","resetTypeFilter","activeClass","isTypeFilterActive","toggleTypeFilter","resetCrFilter","isCrFilterActive","toggleChallengeFilter","bestiary_MonsterEntry","name","id","index","Component","MonsterEntry","react_router_dom","to","savingThrowVariables","savingThrowLabels","strength_save","dexterity_save","constitution_save","wisdom_save","intelligence_save","charisma_save","Monster","match","params","monsterId","stat","Math","floor","savingThrows","v","item","undefined","concat","join","size","subtype","alignment","monster_MonsterStat","class","label","value","armor_class","hit_points","hit_dice","speed","strength","calculateStatBonus","dexterity","constitution","wisdom","intelligence","charisma","damage_vulnerabilities","damage_resistances","damage_immunities","condition_immunities","senses","languages","special_abilities","ability","monster_MonsterAbility","desc","actions","action","legendary_actions","toLowerCase","MonsterStat","console","log","MonsterAbility","Spellbook","spells","school","casting_time","level","spellbook_SpellEntry","SpellEntry","Spell","spellId","number","ordinalMap","spellLevelFormatter","range","components","duration","entry","App","basename","react_router","exact","path","component","Home","render","bestiary","bestiary_monster","assign","spellbook","spellbook_spell","src","require","Boolean","window","location","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fe8571b2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/monster_icon.a7e26744.png\";","module.exports = __webpack_public_path__ + \"static/media/spellbook_icon.885e4ad6.png\";","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Link } from 'react-router-dom';\n\nvar monsterTypes, challengeRatings;\n\nclass Bestiary extends Component {\n  constructor(props) {\n    super(props);\n\n    // Initialize filters as empty.  Empty filters count as no filter,\n    // so all results are shown.  When filters are added, they are pushed\n    // into the array, and then only items matching what is in the arrays\n    // are shown.\n    this.state = {\n      typeFilter: [],\n      crFilter: []\n    }\n  }\n  componentWillMount() {\n    this.buildInitialData();\n  }\n\n  buildInitialData() {\n    monsterTypes = Array.from(new Set(this.props.monsters.map(mon => mon.type))).sort();\n    challengeRatings = Array.from(new Set(this.props.monsters.map(mon => mon.challenge_rating))).sort(function(a,b){return a-b});\n  }\n\n  toggleTypeFilter(type) {\n    let filter = this.state.typeFilter;\n    if(filter.indexOf(type) === -1) {\n      filter.push(type);\n    } else {\n      filter.pop(type);\n    }\n    this.setState({\n      typeFilter: filter\n    });\n  }\n\n  resetTypeFilter() {\n    this.setState({\n      typeFilter: []\n    });\n  }\n\n  toggleChallengeFilter(cr) {\n    let filter = this.state.crFilter;\n    if(filter.indexOf(cr) === -1) {\n      filter.push(cr);\n    } else {\n      filter.pop(cr);\n    }\n    this.setState({\n      crFilter: filter\n    });\n  }\n\n  resetCrFilter() {\n    this.setState({\n      crFilter: []\n    });\n  }\n\n  isTypeFilterActive(type) {\n    if(this.state && this.state.typeFilter && this.state.typeFilter.length > 0) {\n      if(this.state.typeFilter.indexOf(type) > -1) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  isCrFilterActive(cr) {\n    if(this.state && this.state.crFilter && this.state.crFilter.length > 0) {\n      if(this.state.crFilter.indexOf(cr) > -1) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  render() {\n    return (<div>\n      <div className=\"bestiary-header\">D&D 5e Bestiary</div>\n      <div className=\"monster-types-container\">\n        <a onClick={() => this.resetTypeFilter()} className=\"filter-button\"><div className={\"monster-type\" + (this.state.typeFilter.length === 0 ? \" active-filter\" : \"\")}>all</div></a>\n        {monsterTypes.map(type => {\n          let activeClass = \"\";\n          if(this.isTypeFilterActive(type)) {\n            activeClass = \" active-filter\";\n          }\n          return <a onClick={() => this.toggleTypeFilter(type)} className=\"filter-button\"><div className={\"monster-type\" + activeClass}>{type}</div></a>\n        })}\n      </div>\n      <div className=\"challenge-ratings-container\">\n      <a onClick={() => this.resetCrFilter()} className=\"filter-button\"><div className={\"challenge-rating\" + (this.state.crFilter.length === 0 ? \" active-filter\" : \"\")}>all</div></a>\n        {challengeRatings.map(cr => {\n          let activeClass = \"\";\n          if(this.isCrFilterActive(cr)) {\n            activeClass = \" active-filter\";\n          }\n          return <a onClick={() => this.toggleChallengeFilter(cr)} className=\"filter-button\"><div className={\"challenge-rating\" + activeClass}>{cr}</div></a>\n        })}\n      </div>\n      <div className=\"monsters-container\">\n        {this.props.monsters.map(monster => {\n          if(this.state && this.state.typeFilter && this.state.typeFilter.length > 0) {\n            if(this.state.typeFilter.indexOf(monster.type) === -1) {\n              return null;\n            }\n          }\n          if(this.state && this.state.crFilter && this.state.crFilter.length > 0) {\n            if(this.state.crFilter.indexOf(monster.challenge_rating) === -1) {\n              return null;\n            }\n          }\n          return <MonsterEntry name={monster.name} id={monster.index} type={monster.type} cr={monster.challenge_rating} />\n        })}\n      </div>\n    </div>);\n  }\n}\n\nclass MonsterEntry extends Component {\n  render() {\n    return (\n      <div className=\"monster\">\n        <Link to={\"/bestiary/\"+this.props.id}>\n          {this.props.name} [{this.props.type}, CR {this.props.cr}]\n        </Link>\n      </div>\n    )\n  }\n}\n\nexport default Bestiary;","import React, { Component } from 'react';\n\nvar monster;\n\nconst savingThrowVariables = [\n  \"strength_save\",\n  \"dexterity_save\",\n  \"constitution_save\",\n  \"wisdom_save\",\n  \"intelligence_save\",\n  \"charisma_save\"\n];\n\nconst savingThrowLabels = {\n  strength_save: \"Str\",\n  dexterity_save: \"Dex\",\n  constitution_save: \"Con\",\n  wisdom_save: \"Wis\",\n  intelligence_save: \"Int\",\n  charisma_save: \"Cha\"\n}\n\nclass Monster extends Component {\n  componentWillMount() {\n    monster = this.props.monsters.filter(monster => monster.index == this.props.match.params.monsterId)[0];\n  }\n\n  calculateStatBonus(stat) {\n    return Math.floor(stat / 5);\n  }\n\n  render() {\n    let savingThrows = savingThrowVariables\n      .map(v => [v, monster[v]])\n      .filter(item => item[1] !== undefined)\n      .map(item => `${savingThrowLabels[item[0]]} +${item[1]}`).join(', ');\n    \n    return (<div className=\"monster-container\">\n      <div className=\"data-section monster\">\n        <div className=\"monster-name\">{monster.name}</div>\n        <div className=\"monster-details\">{monster.size} {monster.type}{monster.subtype && ` (${monster.subtype})`}, {monster.alignment}</div>\n      </div>\n      <div className=\"data-section-divider\" />\n      <div className=\"monster-data\">\n        <div className=\"data-section monster\">\n          <MonsterStat class=\"monster-armor-class\" label=\"Armor Class\" value={monster.armor_class} />\n          <MonsterStat class=\"monster-hit-points\" label=\"Hit Points\" value={`${monster.hit_points} (${monster.hit_dice})`} />\n          <MonsterStat class=\"monster-speed\" label=\"Speed\" value={monster.speed} />\n        </div>\n        <div className=\"data-section-divider\" />\n        <div className=\"data-section monster\">\n          <div className=\"monster-stat-block\">\n            <div className=\"monster-stat\"><div className=\"monster-stat-header\">STR</div><div className=\"monster-stat-value\">{monster.strength} (+{this.calculateStatBonus(monster.strength)})</div></div>\n            <div className=\"monster-stat\"><div className=\"monster-stat-header\">DEX</div><div className=\"monster-stat-value\">{monster.dexterity} (+{this.calculateStatBonus(monster.dexterity)})</div></div>\n            <div className=\"monster-stat\"><div className=\"monster-stat-header\">CON</div><div className=\"monster-stat-value\">{monster.constitution} (+{this.calculateStatBonus(monster.constitution)})</div></div>\n            <div className=\"monster-stat\"><div className=\"monster-stat-header\">WIS</div><div className=\"monster-stat-value\">{monster.wisdom} (+{this.calculateStatBonus(monster.wisdom)})</div></div>\n            <div className=\"monster-stat\"><div className=\"monster-stat-header\">INT</div><div className=\"monster-stat-value\">{monster.intelligence} (+{this.calculateStatBonus(monster.intelligence)})</div></div>\n            <div className=\"monster-stat\"><div className=\"monster-stat-header\">CHA</div><div className=\"monster-stat-value\">{monster.charisma} (+{this.calculateStatBonus(monster.charisma)})</div></div>\n          </div>\n        </div>\n        <div className=\"data-section-divider\" />\n        <div className=\"data-section monster\">\n          <MonsterStat class=\"monster-saving-throws\" label=\"Saving Throws\" value={savingThrows} />\n          <MonsterStat class=\"monster-damage-vulnerabilities\" label=\"Damage Vulnerabilities\" value={monster.damage_vulnerabilities} />\n          <MonsterStat class=\"monster-damage-resistances\" label=\"Damage Resistances\" value={monster.damage_resistances} />        \n          <MonsterStat class=\"monster-damage-immunities\" label=\"Damage Immunities\" value={monster.damage_immunities} />        \n          <MonsterStat class=\"monster-condition-immunities\" label=\"Condition Immunities\" value={monster.condition_immunities} />        \n          <MonsterStat class=\"monster-senses\" label=\"Senses\" value={monster.senses} />\n          <MonsterStat class=\"monster-languages\" label=\"Languages\" value={monster.languages} />\n          <MonsterStat class=\"monster-challenge-rating\" label=\"Challenge\" value={monster.challenge_rating} />\n        </div>\n        <div className=\"data-section-divider\" />\n        {monster.special_abilities && <div className=\"monster-special-abilities\">\n          {monster.special_abilities.map(ability => {\n            return <MonsterAbility name={ability.name} desc={ability.desc} />\n          })}\n        </div>}\n        {monster.actions && <div className=\"monster-actions\">\n          <div className=\"monster-actions-title\">Actions</div>\n          {monster.actions.map(action => {\n             return <MonsterAbility name={action.name} desc={action.desc} />\n          })}\n        </div>}\n        {monster.legendary_actions && <div className=\"monster-legendary-actions\">\n          <div className=\"monster-legendary-actions-title\">Legendary Actions</div>\n          <div className=\"monster-legendary-actions-description\">The {monster.name.toLowerCase()} can take 3 legendary actions, choosing from the options below. Only one legendary action option can be used at a time, and only at the end of another creature’s turn. The {monster.name.toLowerCase()} regains spent legendary actions at the start of its turn.</div>\n          {monster.legendary_actions.map(action => {\n             return <MonsterAbility name={action.name} desc={action.desc} />\n          })}\n        </div>}\n      </div>\n    </div>)\n  }\n}\n\nclass MonsterStat extends Component {\n  render() {\n    if(!this.props.label || !this.props.class) {\n      console.log(\"The MonsterStat component requires both a label and class!\");\n    }\n    \n    if(!this.props.value) {\n      return null;\n    }\n\n    return (\n      <div className={this.props.class}>\n        <div className=\"inline-header\">{this.props.label}</div> {this.props.value}\n      </div>\n    );\n  }\n}\n\nclass MonsterAbility extends Component {\n  render() {\n    if(!this.props.name || !this.props.desc) {\n      console.log(\"The MonsterStat component requires both a label and value!\");\n    }\n\n    return (\n      <div className=\"monster-special-ability\">\n        <div className=\"monster-special-ability-title\">{this.props.name}.</div> {this.props.desc}\n      </div>\n    );\n  }\n}\n\nexport default Monster;","import React, { Component } from 'react';\n\nvar spell;\n\n\nclass Spell extends Component {\n  componentWillMount() {\n    spell = this.props.spells.filter(spell => spell.index == this.props.match.params.spellId)[0];\n    console.log(this.props.match.params);\n  }\n\n  ordinalMap(number) {\n    if(number == 1) return 'st';\n    if(number == 2) return 'nd';\n    if(number == 3) return 'rd';\n    return 'th';\n  }\n\n  spellLevelFormatter(level, school) {\n    if(level == 0) {\n      return `${school} cantrip`;\n    }\n\n    return `${level}${this.ordinalMap(level)}-level ${school.toLowerCase()}`;\n  }\n\n  render() {\n    return (<div className=\"spell-container\">\n      <div className=\"spell-name\">{spell.name}</div>\n      <div className=\"spell-details\">{this.spellLevelFormatter(spell.level, spell.school.name)}</div>\n      <div className=\"spell-casting-time\"><div className=\"inline-header\">Casting Time:</div> {spell.casting_time}</div>\n      <div className=\"spell-range\"><div className=\"inline-header\">Range:</div> {spell.range}</div>\n      <div className=\"spell-components\"><div className=\"inline-header\">Components:</div> {spell.components}</div>\n      <div className=\"spell-duration\"><div className=\"inline-header\">Duration:</div> {spell.duration}</div>\n      <div className=\"spell-description\">\n        {spell.desc.map(entry => {\n          return <div className=\"spell-description-line\">{entry}</div>\n        })}\n      </div>\n    </div>)\n  }\n}\n\nclass SpellStat extends Component {\n  render() {\n    return (\n      <div className={this.props.class}>\n        <div className=\"inline-header\">{this.props.label}</div> {this.props.value}\n      </div>\n    );\n  }\n}\n\nclass MonsterAbility extends Component {\n  render() {\n    if(!this.props.name || !this.props.desc) {\n      console.log(\"The MonsterStat component requires both a label and value!\");\n    }\n\n    return (\n      <div className=\"monster-special-ability\">\n        <div className=\"monster-special-ability-title\">{this.props.name}.</div> {this.props.desc}\n      </div>\n    );\n  }\n}\n\nexport default Spell;","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Link } from 'react-router-dom';\n\nvar spellClasses, spellSchools, spellCastingTimes, spellLevels;\n\nclass Spellbook extends Component {\n  componentWillMount() {\n    this.buildInitialData();\n  }\n\n  buildInitialData() {\n    // spellClasses = Array.from(new Set(this.props.spells.map(spell => spell.classes.map(s => s.name)))).sort();\n    spellSchools = Array.from(new Set(this.props.spells.map(spell => spell.school.name))).sort();\n    spellCastingTimes = Array.from(new Set(this.props.spells.map(spell => spell.casting_time))).sort();\n    spellLevels = Array.from(new Set(this.props.spells.map(spell => spell.level))).sort(function(a,b){return a-b});\n  }\n\n  setTypeFilter(type) {\n    this.setState({\n      typeFilter: type\n    });\n  }\n\n  setChallengeFilter(cr) {\n    this.setState({\n      crFilter: cr\n    });\n  }\n\n  render() {\n    return (<div>\n      <div className=\"spellbook-header\">D&D 5e Spellbook</div>\n      <div className=\"spells-container\">\n        {this.props.spells.map(spell => {\n          // if(this.state && this.state.typeFilter) {\n          //   if(monster.type !== this.state.typeFilter) {\n          //     return null;\n          //   }\n          // }\n          // if(this.state && this.state.crFilter) {\n          //   if(monster.challenge_rating !== this.state.crFilter) {\n          //     return null;\n          //   }\n          // }\n          return <SpellEntry name={spell.name} id={spell.index} />\n        })}\n      </div>\n    </div>);\n  }\n}\n\nclass SpellEntry extends Component {\n  render() {\n    return (\n      <div className=\"spell\">\n        <Link to={\"/spellbook/\"+this.props.id}>\n          {this.props.name}\n        </Link>\n      </div>\n    )\n  }\n}\n\nexport default Spellbook;","import React, { Component } from 'react';\nimport './App.css';\nimport abilityScores from './data/5e-SRD-Ability-Scores';\nimport classes from './data/5e-SRD-Classes';\nimport conditions from './data/5e-SRD-Conditions';\nimport damageTypes from './data/5e-SRD-Damage-Types';\nimport equipmentCategories from './data/5e-SRD-Equipment-Categories';\nimport equipment from './data/5e-SRD-Equipment';\nimport classFeatures from './data/5e-SRD-Features';\nimport languages from './data/5e-SRD-Languages';\nimport levels from './data/5e-SRD-Levels';\nimport magicSchools from './data/5e-SRD-Magic-Schools';\nimport monsters from './data/5e-SRD-Monsters';\nimport proficiencies from './data/5e-SRD-Proficiencies';\nimport races from './data/5e-SRD-Races';\nimport skills from './data/5e-SRD-Skills';\nimport spellcasting from './data/5e-SRD-Spellcasting';\nimport spells from './data/5e-SRD-Spells';\nimport startingEquipment from './data/5e-SRD-StartingEquipment';\nimport subclasses from './data/5e-SRD-Subclasses';\nimport subraces from './data/5e-SRD-Subraces';\nimport traits from './data/5e-SRD-Traits';\nimport weaponProperties from './data/5e-SRD-Weapon-Properties';\nimport Bestiary from './views/bestiary';\nimport Monster from './views/bestiary/monster';\nimport Spellbook from './views/spellbook';\nimport Spell from './views/spellbook/spell';\nimport { BrowserRouter, Route, Link } from 'react-router-dom';\n\nvar monsterTypes, challengeRatings;\n\nclass App extends Component {\n  render() {\n    return (<div className=\"main-container\">\n        <BrowserRouter basename=\"/arcanum\">\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/bestiary\" render={() => <Bestiary monsters={monsters} />} />\n          <Route exact path=\"/bestiary/:monsterId\" render={(props) => <Monster {...props} monsters={monsters} />} />\n          <Route exact path=\"/spellbook\" render={() => <Spellbook spells={spells} />} />\n          <Route exact path=\"/spellbook/:spellId\" render={(props) => <Spell {...props} spells={spells} />} />\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nclass Home extends Component {\n  render() {\n    return (<div className=\"route-container\">\n      <Link className=\"route-button\" to=\"/bestiary\">\n        <div className=\"route-label\">\n          <img src={require(\"./images/monster_icon.png\")}/>\n          Bestiary\n        </div>\n      </Link>\n      <Link className=\"route-button\" to=\"/spellbook\">\n        <div className=\"route-label\">\n          <img src={require(\"./images/spellbook_icon.png\")}/>\n          Spellbook\n        </div>\n      </Link>\n    </div>);\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}